@page
@model BusManagement.Pages.Clients.PurchaseModel
@{
    Layout = null;
    ViewData["Title"] = "Purchase Ticket";
}

@await Html.PartialAsync("ClientNavigation")

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>@ViewData["Title"]</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

    <style>
        :root {
            --primary: #0d6efd;
            --bg-light: #f9f9f9;
            --bg-dark: linear-gradient(135deg, #283e51, #4b79a1) !important;
            --card-dark: rgba(255, 255, 255, 0.05);
            --text-light: #212529;
            --text-dark: #e9ecef;
            --accent: #0d6efd;
            --hover-light: rgba(13, 110, 253, 0.05);
            --hover-dark: rgba(255, 255, 255, 0.05);
        }

        body {
            background: var(--bg-light);
            color: var(--text-light);
            font-family: 'Segoe UI', sans-serif;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            body.dark-mode {
                background: var(--bg-dark);
                color: var(--text-dark);
            }

        .page-wrapper {
            max-width: 1200px;
            margin: 2rem auto;
            border-radius: 1rem;
            padding: 2rem;
            box-shadow: 0 0 10px rgba(0,0,0,0.05);
            background: white;
            animation: fadeIn 0.5s ease;
        }

        .dark-mode .page-wrapper {
            background: var(--card-dark);
            box-shadow: 0 0 10px rgba(255,255,255,0.05);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        h2 {
            color: var(--primary);
        }

        .card {
            background-color: #ffffff;
            border: 1px solid #e3e3e3;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }

        .dark-mode .card {
            background-color: var(--card-dark);
            border-color: rgba(255, 255, 255, 0.1);
        }

        .form-control:read-only {
            background-color: #f8f9fa;
        }

        .dark-mode .form-control:read-only {
            background-color: #3c3c3c;
            color: white;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>

    <div class="page-wrapper">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="fw-bold text-center mb-4"><i class="bi bi-cart-plus me-2"></i>Purchase Ticket</h2>
            <a href="/Clients/Index" class="btn btn-secondary">
                <i class="bi bi-house-door me-1"></i> Home
            </a>
        </div>

        <!-- Step 1: GET form -->
        <form method="get" class="row g-3 mb-4">
            <div class="col-md-4">
                <label asp-for="SelectedRoute" class="form-label">Route</label>
                <select asp-for="SelectedRoute" class="form-select" onchange="this.form.submit()">
                    <option value="">-- Select Route --</option>
                    @foreach (var route in Model.AllSchedules.Select(s => $"{s.Origin} - {s.Destination}").Distinct())
                    {
                        <option value="@route" selected="@(route == Model.SelectedRoute ? "selected" : null)">
                            @route
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label asp-for="SelectedBusId" class="form-label">Bus</label>
                <select name="SelectedBusId" class="form-select" onchange="this.form.submit()" @(Model.SelectedRoute == null ? "disabled" : "")>
                    <option value="">-- Select Bus --</option>
                    @foreach (var b in Model.AllSchedules.Where(s => $"{s.Origin} - {s.Destination}" == Model.SelectedRoute).Select(s => new { s.BusId, s.BusNumber }).Distinct())
                    {
                        <option value="@b.BusId" selected="@(b.BusId == Model.SelectedBusId ? "selected" : null)">
                            @b.BusNumber
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label asp-for="SelectedScheduleId" class="form-label">Time</label>
                <select name="SelectedScheduleId" class="form-select" onchange="this.form.submit()" @(Model.SelectedBusId == null ? "disabled" : "")>
                    <option value="">-- Select Time --</option>
                    @foreach (var s in Model.AllSchedules.Where(s => s.BusId == Model.SelectedBusId && $"{s.Origin} - {s.Destination}" == Model.SelectedRoute))
                    {
                        <option value="@s.ScheduleId" selected="@(s.ScheduleId == Model.SelectedScheduleId ? "selected" : null)">
                            @($"{s.DepartureTime:yyyy-MM-dd HH:mm} – {s.ArrivalTime:HH:mm}")
                        </option>
                    }
                </select>
            </div>
        </form>

        @if (Model.Current != null)
        {
            <!-- Step 2: Show Info -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card text-center p-3">
                        <h6>Capacity</h6>
                        <h4>@Model.Current.Capacity</h4>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center p-3">
                        <h6>Tickets Sold</h6>
                        <h4>@Model.Current.TicketsSold</h4>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center p-3">
                        <h6>Available Seats</h6>
                        <h4>@Model.Current.AvailableSeats</h4>
                    </div>
                </div>
            </div>

            <!-- Step 3: POST purchase -->
            <form method="post">
                <input type="hidden" asp-for="SelectedRoute" />
                <input type="hidden" asp-for="SelectedBusId" />
                <input type="hidden" asp-for="SelectedScheduleId" />

                <div class="mb-3">
                    <label class="form-label">Route</label>
                    <input class="form-control" readonly value="@Model.SelectedRoute" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Bus</label>
                    <input class="form-control" readonly value="@Model.Current.BusNumber" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Price</label>
                    <input class="form-control" readonly value="@Model.Current.Price.ToString("F2") + " Frw"" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Time</label>
                    <input class="form-control" readonly value="@($"{Model.Current.DepartureTime:yyyy-MM-dd HH:mm} – {Model.Current.ArrivalTime:HH:mm}")" />
                </div>

                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary" @(Model.Current.AvailableSeats <= 0 ? "disabled" : "")>
                        Purchase Ticket
                    </button>
                </div>
            </form>
        }
        else if (Model.SelectedScheduleId != null)
        {
            <div class="alert alert-warning mt-4">Selected schedule not found or already departed.</div>
        }

        @if (!string.IsNullOrEmpty(Model.Message))
        {
            <div class="alert alert-success mt-3">@Model.Message</div>
        }
    </div>

</body>
</html>
